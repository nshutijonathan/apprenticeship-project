name: HealthID - Build Integration Check
on: push
jobs:
  docker_compose_job:
    runs-on: ubuntu-latest
    name: Build Project and Test
    env:
      API_KEY: ${{ secrets.API_KEY }}
      PUSHER_APP_ID: ${{ secrets.PUSHER_APP_ID }}
      PUSHER_CLUSTER: ${{ secrets.PUSHER_CLUSTER }}
      PUSHER_KEY: ${{ secrets.PUSHER_KEY }}
      PUSHER_SECRET: ${{ secrets.PUSHER_SECRET }}
      SECRET: ${{ secrets.SECRET }}
      DEBUG: ${{ secrets.DEBUG }}
      HOST: ${{ secrets.HOST }}
      EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
      EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}
      EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      DEFAULT_FROM_EMAIL: ${{ secrets.DEFAULT_FROM_EMAIL }}
      DOMAIN: ${{ secrets.DOMAIN }}
      FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
      DB_USER: ${{ secrets.DB_USER }}
      CLOUD_NAME: ${{ secrets.CLOUD_NAME }}
      API_SECRET: ${{ secrets.API_SECRET }}
      PASSWORD: ${{ secrets.PASSWORD }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
    steps:
      - uses: actions/checkout@v1
      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: "11.4"
          postgresql db: ${{ secrets.DB_NAME }}
          postgresql user: ${{ secrets.DB_USER }}
          postgresql password: ${{ secrets.DB_PASSWORD }}
      - uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          sudo apt-get install libpq-dev python-dev
          pip install psycopg2-binary
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Create database and load base data
        run: |
          python manage.py makemigrations && python manage.py migrate
      - name: Run the tests
        run: |
          python manage.py test
